name: Apply EKS (dir, IAM user)
on:
  workflow_dispatch:
    inputs:
      tf_dir:
        description: 'Terraform directory to apply'
        required: true
        default: 'terraform'
      tf_vars:
        description: 'Extra TF -var values (key=value, space-separated)'
        required: false
        default: ''
concurrency:
  group: tf-apply-${{ github.ref }}-${{ github.event.inputs.tf_dir || 'terraform' }}

jobs:
  apply:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_BACKEND_TABLE:  ${{ secrets.TF_BACKEND_TABLE }}
      TF_BACKEND_KEY:    ${{ secrets.TF_BACKEND_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Resolve directory
        run: |
          TF_DIR="${{ github.event.inputs.tf_dir || 'terraform' }}"
          echo "TF_DIR=$TF_DIR" >> "$GITHUB_ENV"
          test -d "$TF_DIR" || { echo "Directory '$TF_DIR' not found"; exit 1; }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Compute backend key
        run: |
          if [[ "${TF_BACKEND_KEY}" == *.tfstate ]]; then
            echo "BACKEND_KEY=$TF_BACKEND_KEY" >> "$GITHUB_ENV"
          else
            echo "BACKEND_KEY=${TF_BACKEND_KEY%/}/${{ env.TF_DIR }}/terraform.tfstate" >> "$GITHUB_ENV"
          fi

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=$TF_BACKEND_BUCKET" \
            -backend-config="key=$BACKEND_KEY" \
            -backend-config="region=$AWS_REGION" \
            -backend-config="dynamodb_table=$TF_BACKEND_TABLE"

      - name: Terraform Validate
        working-directory: ${{ env.TF_DIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform plan -out=tfplan \
            -var "region=$AWS_REGION" \
            ${{ github.event.inputs.tf_vars }}

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve tfplan

